;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(query-replace-history set-variable-value-history compile-history buffer-name-history minibuffer-history file-name-history))
(setq query-replace-history '("Raleway" "font_2" "Sans_Serif" "font_1" "Open_Sans" "font_0"))
(setq set-variable-value-history '("2"))
(setq buffer-name-history '("src" "index.jade" "nginx.conf" "dev.local" "default" "devServer" "views" "*Tab Stops*" "*Compile-Log*" "*helm-mode-kill-buffer*" "*helm-mode-basic-save-buffer*" "*helm-mode-find-file*" "*helm buffers*" "*helm M-x*" "*clang-error*" "*clang-output*" "main.cpp" "init.el" "serialPort.hpp" "serialPort.cpp" "airPort.hpp" "*scratch*" "in" "SerialPort.hpp" "*Warnings*" "ccpp" "test-snippets" "terminalClass.jsx" "Gruntfile.js" "index.html"))
(setq minibuffer-history '("/Users/filip/dotfiles/home/aliases.symlink" "/Users/filip/dotfiles/home/zshrc.symlink" "shell-script-mode" "shell-mode" "shel" "/Users/filip/dotfiles/home/fu" "/Users/filip/dotfiles/home/zsh" "/Users/filip/.zshrc" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/jade/" "/Users/filip/.emacs.d/init.el" "/Users/filip/workspace/ccpp/airControlls/make" "/Users/filip/workspace/ccpp/airControlls/mai" "/Users/filip/workspace/ccpp/airControlls/" "/Users/filip/workspace/ccpp/airControlls/main.cpp" #("serial" 0 5 (fontified t face font-lock-constant-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-constant-face)) #("baud_rate" 0 9 (fontified t)) #("LOG_SUCCESS" 0 1 (fontified t c-is-sws t) 1 2 (fontified t c-in-sws t) 2 3 (fontified t c-in-sws t) 3 4 (fontified t c-in-sws t) 4 5 (fontified t c-in-sws t) 5 6 (fontified t c-in-sws t) 6 7 (fontified t c-in-sws t) 7 8 (fontified t c-in-sws t) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t) 10 11 (fontified t c-in-sws t)) #("NOOO" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face c-in-sws t)) "LOG.hpp" "/Users/filip/workspace/ccpp/airControlls/DEBUG.hpp" #("getOpsThrust" 0 12 (fontified t face font-lock-function-name-face)) "/Users/filip/workspace/node/Risk/Website/js/controllers/chat.js" "/Users/filip/workspace/node/Risk/Website/views/chat.html" "/Users/filip/workspace/node/Risk/Website/css/main.scss" "/Users/filip/workspace/node/Risk/Website/js/controllers/" #("panel-body" 0 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) #("panel-footer" 0 12 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) "/Users/filip/workspace/node/Risk/Website/index.html" "/Users/filip/workspace/node/Risk/Website/" #("pOut" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) "/Users/filip/workspace/ccpp/airControlls/protocol.hpp" #("freemailshere.tk" 0 16 (fontified t)) "con" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-available/dist" "/ssh:drpytho@188.166.21.4:/etc/postfix/" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/R" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/jade/index.jade" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/js/custom.js" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/js/" #("span" 0 4 (fontified t face font-lock-function-name-face)) "gulp" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/." "jade" #("Klas" 0 1 (face nil fontified t) 1 4 (face nil fontified t)) "scs" #("$vertical-radius" 0 16 (face font-lock-comment-face fontified t)) "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/scss/" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-available/" #("body" 0 4 (fontified t)) "conf" "/ssh:drpytho@188.166.21.4:/etc/nginx/" #("by" 0 2 (face nil fontified t)) #("dev" 0 3 (face font-lock-string-face fontified t)) "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/scss/style.scss" #("bower/jQuery-One-Page-Nav/jquery" 0 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t) 8 12 (face font-lock-string-face fontified t) 12 14 (face font-lock-string-face fontified t) 14 16 (face font-lock-string-face fontified t) 16 18 (face font-lock-string-face fontified t) 18 21 (face font-lock-string-face fontified t) 21 23 (face font-lock-string-face fontified t) 23 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 32 (face font-lock-string-face fontified t)) #("0" 0 1 (face font-lock-string-face fontified t)) "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/bower.json" #("Oss" 0 1 (face nil fontified t) 1 3 (face nil fontified t)) "/Users/filip/workspace/html/normalize.scss/" "/Users/filip/workspace/ccpp/airControlls/ser" #("uint32_t" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face)) #("INC" 0 2 (fontified t) 2 3 (rear-nonsticky t fontified t)) "/Users/filip/workspace/ccpp/airControlls/Makefile" #("h" 0 1 (fontified t face font-lock-string-face c-in-sws t)) #("1337" 0 1 (fontified t c-in-sws t) 1 2 (fontified t c-in-sws t) 2 3 (fontified t c-in-sws t) 3 4 (fontified t c-in-sws t)) #("5381" 0 4 (fontified t)) "/Users/filip/workspace/python/autovoter/" "/Users/filip/workspace/html/normalize.scss/package.json" "/Users/filip/workspace/html/normalize.scss/bower.json" "/Users/filip/workspace/html/normalize.scss/gu" "/Users/filip/workspace/html/normalize.scss/_normalize.scss" "/Users/filip/workspace/html/normalize.scss/README.md" "/Users/filip/workspace/html/normalize.scss/.gitignore" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/gulpfile.js" #("



" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) "se/dist/" "/ssh:drpytho@188.166.21.4:/var/www/dev/src/jade/" "/ssh:drpytho@188.166.21.4:/var/www/test/src/jade/" #("sass" 0 4 (fontified t font-lock-face font-lock-string-face)) "animation.scss" "scss" "/ssh:drpytho@188.166.21.4:/var/www/test/src/scss/" "/ssh:drpytho@188.166.21.4:/var/www/test/src/scss/style.scss" #("8080" 0 4 (fontified t)) "/ssh:drpytho@188.166.21.4:/etc/nginx/nginx.conf" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-enabled/" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-available/default" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-enabled/devServer" "/ssh:drpytho@188.166.21.4:/var/www/test/src/jade/index.jade" "/ssh:drpytho@188.166.21.4:" "/ssh:drpytho@188.166.21.4" "/ssh:drpytho@188.166.21.4/var/www/test" "/Users/filip/workspace/ccpp/airControlls/airPort.cpp" "/Users/filip/workspace/node/Risk/Website/views/" "/Users/filip/workspace/node/Risk/Website/in" "/Users/filip/workspace/node/Risk/Website/css/" "chat.js" "/Users/filip/workspace/node/Risk/Website/js/" "chat.html" "/Users/filip/workspace/node/Risk/Website/vie" #("scss-indent-offset" 0 18 (fontified t)) #("scss-indent" 0 11 (fontified t)) "/Users/filip/.emacs.d/ini" "load" #("ul" 0 2 (fontified t face (css-selector))) "tab-width" "var" "tab-" "set" #("1" 0 1 (fontified t)) "tab-wi" "se" "tab-w" "set-var" "loa" "l" "/Users/filip/workspace/node/Risk/Website/js/controllers/chatt.js" #("css-mode-markup-indent-offset" 0 29 (fontified t)) "/Users/filip/workspace/node/Risk/Website/Gu" #("Ludvig" 0 6 (font-lock-face font-lock-string-face fontified t)) "load-" "load-f" #("login" 0 5 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) "/Users/filip/workspace/node/Risk/Website/views/chatt.html" "/Users/filip/workspace/ccpp/airControlls/airPort.hpp" "/Users/filip/workspace/ccpp/airControlls/serialPort.cpp" "/Users/filip/workspace/ccpp/airControlls/serialPort.hpp" "c-mo" "c++-mode" #("int" 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t)) "in" "80" "fill-co" "mode" "/Users/filip/workspace/ccpp/airControlls/SerialPort.hpp" "" "serve" "serveh" "/Users/filip/workspace/ccpp/boost-http-server/" "commit-a" "magit-stat" "magit" "eval-las" "e" "eval" "/Users/filip/workspace/ccpp/boost-http-server/main.cpp" "/Users/filip/workspace/ccpp" #("termWindow" 0 10 (face font-lock-variable-name-face fontified t)) #("100%" 0 4 (fontified t)) "/Users/filip/workspace/html/portf/src/jade/" #("95%" 0 3 (fontified t)) "/Users/filip/workspace/html/portf/src/scss/main.scss" "/Users/filip/.ema" "/Users/filip/wo" "/Users/filip/workspace/html/portf/src/js/" #("getDefaultprops" 0 14 (fontified t font-lock-face font-lock-function-name-face) 14 15 (fontified t rear-nonsticky t font-lock-face font-lock-function-name-face)) "js" #("css" 0 3 (fontified t face font-lock-string-face)) "/Users/filip/workspace/html/portf/src/scss/" "gu" #("text/javascript" 0 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 15 (fontified t face font-lock-string-face)) "terminalClass.jsx" "lo" #("n" 0 1 (fontified t face font-lock-string-face)) #("src" 0 3 (fontified t font-lock-face font-lock-string-face)) "/Users/filip/workspace/html/portf/src/js/terminalClass.js" "terminalClass.js" "dist/bower" #("here" 0 4 (fontified t face nil)) "/Users/filip/workspace/html/portf/.gitignore" ".gitignore" #("nice" 0 4 (fontified t face nil)) "/Users/filip/workspace/html/portf/gu" "/Users/filip/workspace/html/portf/dist/index.html" #(">" 0 1 (fontified t rear-nonsticky t face font-lock-comment-face)) "inde" "dist/" "/Users/filip/workspace/html/portf/.bowerrc" ".bowerrc" "/Users/filip/workspace/html/portf/Gu" "/Users/filip/workspace/html/portf/src/jade/index.jade" "index.jade" "/Users/filip/.emacs.d/init" "/Users/filip/workspace/html/portf/G" "/Users/filip/workspace/html/portf/src/js/index.js" "index.js" "/Users/filip/workspace/html/portf/sr" "main.scss" "/Users/filip/work" "/Users/filip/.em"))
(setq file-name-history '("~/dotfiles/home/aliases.symlink" "~/dotfiles/home/zshrc.symlink" "~/dotfiles/home/functions.symlink" "~/.zshrc" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/jade/index.jade" "~/.emacs.d/init.el" "~/workspace/ccpp/airControlls/Makefile" "~/workspace/ccpp/airControlls/main.cpp" "~/workspace/ccpp/airControlls/LOG.hpp" "~/workspace/ccpp/airControlls/airPort.hpp" "~/workspace/ccpp/airControlls/airPort.cpp" "~/workspace/node/Risk/Website/js/controllers/chat.js" "~/workspace/node/Risk/Website/views/chat.html" "~/workspace/node/Risk/Website/css/main.scss" "~/workspace/node/Risk/Website/index.html" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-available/dist" "/ssh:drpytho@188.166.21.4:/etc/postfix/main.cf" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/bower.json" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/package.json" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/README.md" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/js/custom.js" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/gulpfile.js" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/.gitignore" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/.bowerrc" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/scss/style.scss" "/ssh:drpytho@188.166.21.4:/etc/nginx/nginx.conf" "~/workspace/html/normalize.scss/package.json" "~/workspace/html/normalize.scss/bower.json" "~/workspace/ccpp/airControlls/serialPort.cpp" "~/workspace/ccpp/airControlls/serialPort.hpp" "~/workspace/python/autovoter/autovoter.py" "~/workspace/html/normalize.scss/.gitignore" "~/workspace/html/normalize.scss/gulpfile.js" "~/workspace/html/normalize.scss/_normalize.scss" "~/workspace/html/normalize.scss/README.md" "~/workspace/html/normalize.scss/LICENSE" "/ssh:drpytho@188.166.21.4:/var/www/attendant.se/src/scss/_variables.scss" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-available/dev" "/ssh:drpytho@188.166.21.4:/var/www/dev/src/jade/index.jade" "/ssh:drpytho@188.166.21.4:/var/www/test/src/jade/index.jade" "/ssh:drpytho@188.166.21.4:/var/www/test/src/scss/animation.css" "/ssh:drpytho@188.166.21.4:/var/www/test/src/scss/style.scss" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-available/default" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-available/dev.local" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-enabled/default" "/ssh:drpytho@188.166.21.4:/etc/nginx/sites-enabled/devServer" "/ssh:drpytho@188.166.21.4:/etc/nginx/fastcgi.conf" "~/workspace/node/Risk/Website/js/controllers/chatt.js" "~/workspace/node/Risk/Website/js/config.js" "~/workspace/node/Risk/Website/gulpfile.js" "~/workspace/node/Risk/Website/views/chatt.html" "~/workspace/node/Risk/Website/views/index.html" "~/workspace/node/Risk/Website/views/register.html" "~/workspace/node/Risk/Website/views/about.html" "~/workspace/node/Risk/Website/js/controllers/register.js" "~/workspace/node/Risk/Website/js/controllers/index.js" "~/workspace/ccpp/boost-http-server/server.cpp" "~/workspace/ccpp/boost-http-server/server.hpp" "~/workspace/html/portf/src/jade/index.jade" "~/workspace/html/portf/src/scss/main.scss" "~/workspace/html/portf/src/js/terminalClass.jsx" "~/workspace/html/portf/Gulpfile.js" "~/workspace/html/portf/dist/index.html" "~/workspace/html/portf/Gruntfile.js" "~/workspace/node/Risk/Gameserver/README.md" "~/.emacs.d/elpa/scss-mode-20150107.1400/scss-mode-autoloads.el" "~/.emacs.d/elpa/company-20150727.1415/company-autoloads.el" "~/.emacs.d/elpa/multiple-cursors-20150710.456/multiple-cursors-autoloads.el" "~/.emacs.d/elpa/ace-jump-mode-20140616.115/ace-jump-mode-autoloads.el" "~/.emacs.d/custom/ui.el" "~/.emacs.d/elpa/expand-region-20150902.558/expand-region-autoloads.el" "~/.emacs.d/custom/editor.el" "~/.emacs.d/lang/sh.el" "~/.emacs.d/lang/org.el" "~/.emacs.d/lang/golang.el" "~/workspace/html/portf/package.json" "~/Desktop/style-cleaned.css" "/ssh:drpytho@188.166.21.4:/var/www/html/gulpfile.js" "/ssh:drpytho@188.166.21.4:/var/www/html/public/scss/style.scss" "~/Downloads/Creative-free-responsive-html5-business-template/css/style.css" "/ssh:drpytho@188.166.21.4:/var/www/html/public/css/style.css" "/ssh:drpytho@188.166.21.4:/var/www/html/bower_components/normalize-css/normalize.css"))
(setq kill-ring '(#("echo $d" 0 4 (fontified t face font-lock-builtin-face) 4 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face)) #("/usr/local/opt/go/libexec/bin\"" 0 29 (fontified t face font-lock-string-face) 29 30 (fontified t rear-nonsticky t face font-lock-string-face)) "/usr/local/bin/go" #("atp \"/usr/local/opt/go/libexec/bin\"" 0 4 (fontified t) 4 5 (fontified t face font-lock-string-face) 5 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face)) #("export GOROOT=\"/Users/filip/workspace/golang/\"" 0 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face)) #("atp \"/Users/filip/workspace/golang/bin\" # This will maybe change" 0 4 (fontified t) 4 5 (fontified t face font-lock-string-face) 5 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t) 40 42 (fontified t face font-lock-comment-delimiter-face) 42 64 (fontified t face font-lock-comment-face)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("$1" 0 1 (fontified t) 1 2 (fontified t face font-lock-variable-name-face)) #("alias up2=\"up 2\"" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 16 (fontified t face font-lock-string-face)) #("echo $d" 0 4 (fontified t face font-lock-builtin-face) 4 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face)) #("source $ZSH/oh-my-zsh.sh" 0 6 (fontified t face font-lock-builtin-face) 6 8 (fontified t) 8 11 (fontified t face font-lock-variable-name-face) 11 24 (fontified t)) #("d=$(echo $d | sed 's/^\\///')
  if [ -z \"$d\" ]; then
    d=..
  fi" 0 1 (fontified t face font-lock-variable-name-face) 1 4 (fontified t) 4 8 (fontified t face font-lock-builtin-face) 8 10 (fontified t) 10 11 (fontified t face font-lock-variable-name-face) 11 18 (fontified t) 18 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 29 (fontified t) 29 31 (fontified t) 31 33 (face font-lock-keyword-face fontified t) 33 39 (fontified t) 39 43 (face font-lock-string-face fontified t) 43 47 (fontified t) 47 51 (face font-lock-keyword-face fontified t) 51 52 (fontified t) 52 56 (fontified t) 56 57 (face font-lock-variable-name-face fontified t) 57 60 (fontified t) 60 61 (fontified t) 61 63 (fontified t) 63 65 (face font-lock-keyword-face fontified t)) "up(){
  local d=\"\"
  limit=$1
  for ((i=1 ; i <= limit ; i++))
    do
      d=$d/..
    done
  d=$(echo $d | sed 's/^\\///')
  if [ -z \"$d\" ]; then
    d=..
  fi
  cd $d
}" #("alias afk=\"/System/Library/CoreServices/Menu\\ Extras/User.menu/Contents/Resources/CGSession -suspend\"" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 101 (fontified t face font-lock-string-face)) #("# OS X has no `sha1sum`, so use `shasum` as a fallback
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 54 (face font-lock-comment-face fontified t) 54 55 (fontified t)) #("# OS X has no `md5sum`, so use `md5` as a fallback
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 50 (face font-lock-comment-face fontified t) 50 51 (fontified t)) #("# Canonical hex dump; some systems have this symlinked
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 54 (face font-lock-comment-face fontified t) 54 55 (fontified t)) #("# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd=\"hexdump -C\"

# OS X has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum=\"md5\"

# OS X has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum=\"shasum\"" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 55 (fontified t face font-lock-comment-face) 55 84 (fontified t) 84 89 (fontified t face font-lock-builtin-face) 89 90 (fontified t) 90 92 (fontified t face font-lock-variable-name-face) 92 93 (fontified t) 93 105 (fontified t face font-lock-string-face) 105 107 (fontified t) 107 109 (fontified t face font-lock-comment-delimiter-face) 109 158 (fontified t face font-lock-comment-face) 158 191 (fontified t) 191 196 (fontified t face font-lock-builtin-face) 196 197 (fontified t) 197 203 (fontified t face font-lock-variable-name-face) 203 204 (fontified t) 204 209 (fontified t face font-lock-string-face) 209 211 (fontified t) 211 213 (fontified t face font-lock-comment-delimiter-face) 213 266 (fontified t face font-lock-comment-face) 266 300 (fontified t) 300 305 (fontified t face font-lock-builtin-face) 305 306 (fontified t) 306 313 (fontified t face font-lock-variable-name-face) 313 314 (fontified t) 314 322 (fontified t face font-lock-string-face)) #("dig +short myip.opendns.com @resolver1.opendns.com" 0 50 (fontified t face font-lock-string-face)) #("echo \"Timer started. Stop with Ctrl-D.\" && date && time cat && date" 0 67 (fontified t face font-lock-string-face)) #("alias timer='echo \"Timer started. Stop with Ctrl-D.\" && date && time cat && date'" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t) 12 80 (fontified t face font-lock-string-face) 80 81 (fontified t rear-nonsticky t face font-lock-string-face)) #("alias timer='echo \"Timer started. Stop with Ctrl-D.\" && date && time cat && date'" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t) 12 81 (fontified t face font-lock-string-face)) #("ls -lF ${colorflag} | grep --color=never '^d'" 0 45 (fontified t face font-lock-string-face)) #("alias workspace=\"cd $HOME/workspace/\"" 0 1 (fontified t face font-lock-builtin-face) 1 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t) 16 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face)) #("atp \"$HOME/.bin\"
atp \"$HOME/.bin\"
atp \"$HOME/.bin\"" 0 4 (fontified t) 4 15 (fontified t face font-lock-string-face) 15 16 (fontified t rear-nonsticky t face font-lock-string-face) 16 17 (fontified t) 17 21 (fontified t) 21 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face rear-nonsticky t fontified t) 33 34 (fontified t) 34 38 (fontified t) 38 49 (face font-lock-string-face fontified t) 49 50 (face font-lock-string-face fontified t rear-nonsticky t)) #("atp \"$HOME/.bin\"" 0 4 (fontified t) 4 16 (fontified t face font-lock-string-face)) #("
# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n \"$@\" ]]; then
		du $arg -- \"$@\";
	else
		du $arg .[^.]* *;
	fi;
}
" 0 1 (fontified t) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 57 (fontified t face font-lock-comment-face) 57 65 (fontified t face font-lock-keyword-face) 65 66 (fontified t) 66 68 (fontified t face font-lock-function-name-face) 68 73 (fontified t) 73 74 (fontified t) 74 76 (fontified t face font-lock-keyword-face) 76 80 (fontified t) 80 82 (fontified t) 82 111 (fontified t) 111 115 (fontified t face font-lock-keyword-face) 115 118 (fontified t) 118 123 (fontified t face font-lock-builtin-face) 123 124 (fontified t) 124 127 (fontified t face font-lock-variable-name-face) 127 135 (fontified t) 135 139 (fontified t face font-lock-keyword-face) 139 142 (fontified t) 142 147 (fontified t face font-lock-builtin-face) 147 148 (fontified t) 148 151 (fontified t face font-lock-variable-name-face) 151 157 (fontified t) 157 158 (fontified t) 158 160 (fontified t face font-lock-keyword-face) 160 162 (fontified t) 162 164 (fontified t face font-lock-keyword-face) 164 168 (fontified t) 168 170 (fontified t) 170 171 (fontified t) 171 173 (fontified t face font-lock-string-face) 173 174 (syntax-table (3) fontified t face font-lock-string-face) 174 175 (fontified t face font-lock-string-face) 175 180 (fontified t) 180 184 (fontified t face font-lock-keyword-face) 184 191 (fontified t) 191 194 (fontified t face font-lock-variable-name-face) 194 195 (fontified t) 195 197 (fontified t) 197 198 (fontified t) 198 200 (fontified t face font-lock-string-face) 200 201 (syntax-table (3) fontified t face font-lock-string-face) 201 202 (fontified t face font-lock-string-face) 202 205 (fontified t) 205 209 (fontified t face font-lock-keyword-face) 209 216 (fontified t) 216 219 (fontified t face font-lock-variable-name-face) 219 231 (fontified t) 231 233 (fontified t face font-lock-keyword-face) 233 237 (fontified t)) #("# Create a new directory and enter it" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 37 (fontified t face font-lock-comment-face)) #("function mkd() {
	mkdir -p \"$@\" && cd \"$_\";
}
" 0 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-function-name-face) 12 24 (fontified t) 24 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t face font-lock-string-face) 29 30 (syntax-table (3) fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 35 (fontified t) 35 37 (fontified t face font-lock-builtin-face) 37 38 (fontified t) 38 42 (fontified t face font-lock-string-face) 42 46 (fontified t)) #("/Users/filip/bin:" 0 17 (fontified t face font-lock-string-face)) #("/usr/texbin:/usr/local/sbin\"" 0 12 (fontified t face font-lock-string-face) 12 28 (fontified t face font-lock-string-face)) #("# User configuration" 0 1 (fontified t syntax-table (3)) 1 2 (fontified t) 2 20 (fontified t)) #("# Path to your oh-my-zsh installation." 0 2 (fontified t face font-lock-comment-delimiter-face) 2 38 (fontified t face font-lock-comment-face)) #("            " 0 12 (fontified t)) #("/Users/filip/Library/Android/sdk/platform-tools" 0 46 (fontified t) 46 47 (fontified t rear-nonsticky t)) #("/Users/filip/Library/Android/sdk/platform-tools" 0 47 (fontified t)) #("# export MANPATH=\"/usr/local/man:$MANPATH\"" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 18 (fontified t face font-lock-comment-face) 18 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face)) #("/Users/filip/.composer/vendor/bin

" 0 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t)) #(":/usr/sbin:/sbin:/Users/filip/bin\"

/Users/filip/.composer/vendor/bin

/usr/texbin
/usr/local/sbin
" 0 34 (fontified t face font-lock-string-face) 34 35 (fontified t) 35 36 (fontified t) 36 70 (fontified t) 70 71 (fontified t) 71 83 (fontified t) 83 99 (fontified t)) #("# time that oh-my-zsh is loaded." 0 2 (fontified t face font-lock-comment-delimiter-face) 2 32 (fontified t face font-lock-comment-face)) #("# Optionally, if you set this to \"random\", it'll load a random theme each" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 73 (fontified t face font-lock-comment-face)) #("# Look in ~/.oh-my-zsh/themes/" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 30 (fontified t face font-lock-comment-face)) #("# Set name of the theme to load." 0 2 (fontified t face font-lock-comment-delimiter-face) 2 32 (fontified t face font-lock-comment-face)) "Vi är ledande genom professionell och miljövänlig städning.

Det åstadkommer vi genom att säkerhetskontrollera och utbilda vår personal. Personal har ID06 legitimation, Vi betalar våra skatter och pensioner.

Vi säkerställer rätt utfört arbete genom att personalen har tagit del av företagets kvalitetsrutiner.

Vi minskar miljöbelastningen genom att alltid dosera rätt kemikalier.

Det är de små detaljerna som ger extra värde till våra kunder.

" #("    SUCCESS(\"Program exited correctly\");" 0 12 (fontified t) 12 38 (fontified t face font-lock-string-face) 38 40 (fontified t)) #("    if (!glfwInit())
    {
        ERROR(\"GLFW cound not initiate\");
        exit(-1);
    }
    SUCCESS(\"GLFW has been initated\");
" 0 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 8 (fontified t) 8 9 (fontified t face font-lock-negation-char-face) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 21 (fontified t) 21 25 (fontified t) 25 27 (fontified t) 27 35 (fontified t) 35 41 (fontified t) 41 66 (fontified t face font-lock-string-face) 66 67 (fontified t) 67 68 (rear-nonsticky t fontified t) 68 69 (fontified t) 69 77 (fontified t) 77 86 (fontified t) 86 87 (fontified t) 87 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 97 (fontified t) 97 98 (c-in-sws t fontified t) 98 99 (c-in-sws t fontified t) 99 100 (c-in-sws t fontified t) 100 101 (c-in-sws t fontified t) 101 102 (c-in-sws t fontified t) 102 103 (c-in-sws t fontified t) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t fontified t) 105 128 (fontified t face font-lock-string-face) 128 129 (c-in-sws t fontified t face font-lock-string-face) 129 130 (c-in-sws t fontified t) 130 131 (c-in-sws t fontified t) 131 132 (fontified t)) #("    INFO(\"Starting GLFW3\");" 0 4 (fontified t) 4 5 (c-in-sws t fontified t) 5 6 (c-in-sws t fontified t) 6 7 (c-in-sws t fontified t) 7 8 (c-in-sws t fontified t) 8 9 (c-in-sws t fontified t) 9 24 (fontified t face font-lock-string-face) 24 25 (c-in-sws t fontified t face font-lock-string-face) 25 26 (c-in-sws t fontified t) 26 27 (c-in-sws t fontified t)) "#include <GLFW/glfw3.h>
#include <stdlib.h>
#include <stdio.h>
static void error_callback(int error, const char* description)
{
    fputs(description, stderr);
}
static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)
{
    if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS)
        glfwSetWindowShouldClose(window, GL_TRUE);
}
int main(void)
{
    GLFWwindow* window;
    glfwSetErrorCallback(error_callback);
    if (!glfwInit())
        exit(EXIT_FAILURE);
    window = glfwCreateWindow(640, 480, \"Simple example\", NULL, NULL);
    if (!window)
    {
        glfwTerminate();
        exit(EXIT_FAILURE);
    }
    glfwMakeContextCurrent(window);
    glfwSwapInterval(1);
    glfwSetKeyCallback(window, key_callback);
    while (!glfwWindowShouldClose(window))
    {
        float ratio;
        int width, height;
        glfwGetFramebufferSize(window, &width, &height);
        ratio = width / (float) height;
        glViewport(0, 0, width, height);
        glClear(GL_COLOR_BUFFER_BIT);
        glMatrixMode(GL_PROJECTION);
        glLoadIdentity();
        glOrtho(-ratio, ratio, -1.f, 1.f, 1.f, -1.f);
        glMatrixMode(GL_MODELVIEW);
        glLoadIdentity();
        glRotatef((float) glfwGetTime() * 50.f, 0.f, 0.f, 1.f);
        glBegin(GL_TRIANGLES);
        glColor3f(1.f, 0.f, 0.f);
        glVertex3f(-0.6f, -0.4f, 0.f);
        glColor3f(0.f, 1.f, 0.f);
        glVertex3f(0.6f, -0.4f, 0.f);
        glColor3f(0.f, 0.f, 1.f);
        glVertex3f(0.f, 0.6f, 0.f);
        glEnd();
        glfwSwapBuffers(window);
        glfwPollEvents();
    }
    glfwDestroyWindow(window);
    glfwTerminate();
    exit(EXIT_SUCCESS);
}" #("-I /usr/local/Cellar/glfw3/3.1.1/include" 0 40 (fontified t)) #("-L /usr/local/Cellar/glfw3/3.1.1/lib" 0 36 (fontified t)) "pkg-config --static --libs glfw3" "glfwSetKeyCallback(window, key_callback);" #("static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods);" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-type-face) 10 11 (fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (fontified t) 12 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t c-type c-decl-arg-start) 25 35 (fontified t face font-lock-type-face) 35 37 (fontified t) 37 43 (fontified t face font-lock-variable-name-face) 43 44 (fontified t c-type c-decl-arg-start) 44 45 (fontified t) 45 48 (fontified t face font-lock-type-face) 48 49 (fontified t) 49 52 (fontified t face font-lock-variable-name-face) 52 53 (fontified t c-type c-decl-arg-start) 53 54 (fontified t) 54 57 (fontified t face font-lock-type-face) 57 58 (fontified t) 58 66 (fontified t face font-lock-variable-name-face) 66 67 (fontified t c-type c-decl-arg-start) 67 68 (fontified t) 68 71 (fontified t face font-lock-type-face) 71 72 (fontified t) 72 78 (fontified t face font-lock-variable-name-face) 78 79 (fontified t c-type c-decl-arg-start) 79 80 (fontified t) 80 83 (fontified t face font-lock-type-face) 83 84 (fontified t) 84 88 (fontified t face font-lock-variable-name-face) 88 90 (fontified t)) #("
{
    if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS)
        glfwSetWindowShouldClose(window, GL_TRUE);
}" 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t) 7 9 (fontified t face font-lock-keyword-face) 9 110 (fontified t) 110 111 (rear-nonsticky t fontified t)) "static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)
{
    if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS)
        glfwSetWindowShouldClose(window, GL_TRUE);
}" "while (!glfwWindowShouldClose(window))
{
    // Keep running
}" "glfwMakeContextCurrent(window);" "if (!window)
{
    glfwTerminate();
    exit(EXIT_FAILURE);
}" "GLFWwindow* window = glfwCreateWindow(640, 480, \"My Title\", NULL, NULL);"))
(setq search-ring 'nil)
(setq regexp-search-ring '("PATH" ":" "theme" "voi" "SUCCEs" "if (ke" "stat" "was" "s" "0x0" "::" "st" "400" "box" "red" "pu"))
